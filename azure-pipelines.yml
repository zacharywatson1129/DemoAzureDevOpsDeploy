trigger:
  branches:
    include:
    - main

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: echo Test Script Output...Start of pipeline!
  displayName: 'Running a one-line test script'

- script: |
    echo "Listing root directory contents"
    dir $(Build.SourcesDirectory)
  displayName: 'List root directory contents'

- script: |
    echo "Listing contents of DemoWinformsApp"
    dir $(Build.SourcesDirectory)/DemoWinformsApp
  displayName: 'List contents of DemoWinformsApp directory'

- script: dotnet restore '$(Build.SourcesDirectory)/DemoWinformsApp/DemoWinformsApp.csproj'
  displayName: 'Restore NuGet packages'

- script: dotnet build '$(Build.SourcesDirectory)/DemoWinformsApp/DemoWinformsApp.csproj' --configuration $(buildConfiguration)
  displayName: 'Build project'

- script: dotnet publish '$(Build.SourcesDirectory)/DemoWinformsApp/DemoWinformsApp.csproj' --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish
  displayName: 'Publish project'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/DemoAzureDevOpsDeploy.zip'
    replaceExistingArchive: true

- publish: $(Build.ArtifactStagingDirectory)/DemoAzureDevOpsDeploy.zip
  artifact: DemoAzureDevOpsDeploy

- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'github.com_zacharywatson1129'  # The name of your GitHub service connection
    repositoryName: 'zacharywatson1129/DemoAzureDevOpsDeploy'
    tagSource: 'manual'
    tag: 'v1.0.2'  # Adjust as needed
    title: 'Release v1.0.2'
    assets: '$(Build.ArtifactStagingDirectory)/DemoAzureDevOpsDeploy.zip'

- script: |
    echo Finishing up! ----End of pipeline
  displayName: 'Final script'