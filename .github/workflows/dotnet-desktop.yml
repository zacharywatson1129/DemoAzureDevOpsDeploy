
name: Build and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag'
        required: true
        default: 'v1.0.0'
      deploy:
        description: 'Trigger deployment'
        required: true
        type: boolean
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    # Install any nuget packages
    - name: Install dependencies
      uses: dotnet restore DemoAzureDevOpsDeploy/DemoAzureDevOpsDeploy.csproj

    # Build the application
    - name: Build
      run: dotnet build --configuration Release DemoAzureDevOpsDeploy/DemoAzureDevOpsDeploy.csproj

    # Publish
    - name: Build
      run: dotnet publis --configuration Release DemoAzureDevOpsDeploy/DemoAzureDevOpsDeploy.csproj

    # Zip up the bin folder
    - name: Zip bin folder
      run: |
        Compress-Archive -Path ./bin/DemoAzureDevOpsDeploy -DestinationPath ./DemoAzureDevOpsDeploy.zip

    # Now that it's built, actually create the Github Release
    - name: Create GitHub Release
      id: create_release
      uses: gh-actions/create-release@v1
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        release_name: Release ${{ github.event.inputs.release_tag }}
        body: 'Release of ${{ github.event.inputs.release_tag }}'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # The release is created, we upload it now.
    - name: Upload Release Asset
      uses: gh-actions/upload-release-asset@v1
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./YourApp.zip
        asset_name: YourApp.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Update the README to download the latest app version.
    - name: Update README with release link
      run: |
        $releaseUrl = "https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.release_tag }}"
        (Get-Content README.md) -replace "Download now", "Download now [here]($releaseUrl)" | Set-Content README.md

    #Everything else is good, commit and push.
    - name: Commit and push changes
      uses: EndBug/add-and-commit@v9
      with:
        author_name: Your Name
        author_email: your-email@example.com
        message: 'Update README with link to new release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
